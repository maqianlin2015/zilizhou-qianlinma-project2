{"ast":null,"code":"import { createStore } from \"redux\";\nimport { CHANGE_APP_STATUS, CHANGE_WINNER } from \"./actionConstants\"; // Action creator functions\n\nexport const changeAppStatus = newAppStatus => ({\n  type: CHANGE_APP_STATUS,\n  payload: {\n    newAppStatus: newAppStatus\n  }\n});\nexport const changeWinner = newWinner => ({\n  type: CHANGE_WINNER,\n  payload: {\n    newWinner: newWinner\n  }\n}); // // Reductor check which action you give ,and based on action, modify the store\n// //dispatch: execute action\n// // action\n// const increament = () => {\n//     return{\n//         type: 'INCREMENT'\n//     }\n// }\n// const decreament = () => {\n//     return{\n//         type: 'DECREMENT'\n//     }\n// }\n// // reducer，不同的reducer做不同的事\n// const conter = (state = 0, action) => {\n//     switch(action.type) {\n//         case \"INCREMENT\": // based on name, return sth\n//             return state+1;\n//             case \"DECREMENT\":\n//                 return state-1;\n//     }\n// }\n// // 1. create store:\n// import (createStore)\n// let store = createStore(counter);\n// // dispatch \n// store.dispatch(increment()); 里面放了一个action","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/actions.js"],"names":["createStore","CHANGE_APP_STATUS","CHANGE_WINNER","changeAppStatus","newAppStatus","type","payload","changeWinner","newWinner"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,iBAAT,EAA4BC,aAA5B,QAAiD,mBAAjD,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGC,YAAY,KAAK;AAC5CC,EAAAA,IAAI,EAAEJ,iBADsC;AAE5CK,EAAAA,OAAO,EAAE;AACLF,IAAAA,YAAY,EAAEA;AADT;AAFmC,CAAL,CAApC;AAOP,OAAO,MAAMG,YAAY,GAAGC,SAAS,KAAK;AACtCH,EAAAA,IAAI,EAAEH,aADgC;AAEtCI,EAAAA,OAAO,EAAE;AACLE,IAAAA,SAAS,EAAEA;AADN;AAF6B,CAAL,CAA9B,C,CASP;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["import { createStore } from \"redux\";\nimport { CHANGE_APP_STATUS, CHANGE_WINNER } from \"./actionConstants\";\n\n// Action creator functions\nexport const changeAppStatus = newAppStatus => ({\n    type: CHANGE_APP_STATUS,\n    payload: {\n        newAppStatus: newAppStatus\n    }\n});\n\nexport const changeWinner = newWinner => ({\n    type: CHANGE_WINNER,\n    payload: {\n        newWinner: newWinner\n    }\n})\n\n\n\n// // Reductor check which action you give ,and based on action, modify the store\n// //dispatch: execute action\n\n\n// // action\n// const increament = () => {\n//     return{\n//         type: 'INCREMENT'\n//     }\n// }\n// const decreament = () => {\n//     return{\n//         type: 'DECREMENT'\n//     }\n// }\n// // reducer，不同的reducer做不同的事\n// const conter = (state = 0, action) => {\n//     switch(action.type) {\n//         case \"INCREMENT\": // based on name, return sth\n        \n//             return state+1;\n//             case \"DECREMENT\":\n//                 return state-1;\n//     }\n// }\n\n// // 1. create store:\n// import (createStore)\n// let store = createStore(counter);\n\n// // dispatch \n// store.dispatch(increment()); 里面放了一个action\n\n"]},"metadata":{},"sourceType":"module"}