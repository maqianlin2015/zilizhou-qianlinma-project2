{"ast":null,"code":"var _jsxFileName = \"/Users/michelle_ma/Desktop/proj2/src/components/FreePlayerGame.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../style/Game.css';\nimport GameBoard from './GameBoard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FreePlayerGame = props => {\n  _s();\n\n  const {\n    player,\n    opponent\n  } = props;\n  const [isGameReady, setGameReady] = useState(true);\n  const [opponentBoard, setOpponentBoard] = useState([...opponent.gameBoard.board]);\n  const [EnemyShipCount, setEnemyShipCount] = useState(opponent.gameBoard.shipCount); // 用不到\n  // useEffect(() => {\n  // \thandlePlayerShipDisplay();\n  // }, [board]);\n\n  useEffect(() => {\n    handleComputerShipDisplay();\n  }, [EnemyShipCount]);\n\n  const onPlaceRandomly = () => {\n    onResetBoard();\n    player.gameBoard.placeShipsAtRandom();\n    setBoard([...player.gameBoard.board]);\n  };\n\n  const onFlipShips = () => {\n    player.gameBoard.ships.forEach(ship => {\n      if (!ship.onBoard) player.gameBoard.changeShipDirection(ship);\n    });\n    setBoard([...player.gameBoard.board]);\n    document.querySelector('.ship-wrapper').classList.toggle('flipped');\n  };\n\n  const onPlaceShip = e => {\n    const y = e.target.dataset.cord.split(',')[0];\n    const x = e.target.dataset.cord.split(',')[1];\n    const shipID = e.dataTransfer.getData('ship');\n    const ship = player.gameBoard.ships[shipID - 1];\n    player.gameBoard.placeShip(ship, x, y); // console.table(board);\n\n    setBoard([...player.gameBoard.board]);\n  };\n\n  const onStartGame = () => {\n    if (player.gameBoard.isReady) setGameReady(true);\n  };\n\n  const onMakeMove = e => {\n    const y = e.target.dataset.cord.split(',')[0];\n    const x = e.target.dataset.cord.split(',')[1];\n\n    if (player.makeMove(opponent, x, y) === true) {\n      setOpponentBoard([...opponent.gameBoard.board]);\n      setEnemyShipCount(opponent.gameBoard.shipCount); // console.table(opponentBoard);\n\n      if (opponent.gameBoard.isGameOver) {\n        onEndGame(player);\n      }\n\n      onAIMove();\n    }\n  };\n\n  const onEndGame = winner => {\n    setTimeout(() => {\n      props.setWinner(winner);\n      props.setAppStatus('announcer');\n    }, 500);\n  };\n\n  const handleComputerShipDisplay = () => {\n    opponent.gameBoard.ships.map(ship => {\n      if (ship.isSunk() === true) {\n        mountShip(opponent, ship);\n      }\n    });\n  };\n\n  const mountShip = (owner, ship) => {\n    if (ship.onBoard) {\n      const cords = [ship.coordinates[1], ship.coordinates[0]];\n      const boardDiv = document.querySelector(`.${owner.side}`);\n      const startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\n\n      if (!startingCell.querySelector('.ship-img-grid')) {\n        const shipImg = document.createElement('img');\n        shipImg.src = // eslint-disable-next-line no-undef\n        process.env.PUBLIC_URL + `/images/${owner.side}${ship.size}.png`;\n        shipImg.alt = `ship-${owner.side}${ship.size}`;\n        shipImg.classList.add(`ship-img-grid`);\n        shipImg.classList.add(ship.direction);\n        shipImg.targetAble = false;\n        startingCell.appendChild(shipImg);\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: /*#__PURE__*/_jsxDEV(GameBoard, {\n        player: player,\n        board: board,\n        isGameReady: isGameReady,\n        setGameReady: setGameReady,\n        onFlipShips: onFlipShips,\n        onPlaceShip: onPlaceShip,\n        onPlaceRandomly: onPlaceRandomly,\n        onResetBoard: onResetBoard,\n        onStartGame: onStartGame\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n};\n\n_s(FreePlayerGame, \"EnQMAFoNsMbrvDBHqMocMRZ1jC0=\");\n\n_c = FreePlayerGame;\nexport default Game;\nGame.propTypes = {\n  player: PropTypes.object,\n  board: PropTypes.array,\n  setBoard: PropTypes.func,\n  opponent: PropTypes.object,\n  opponentBoard: PropTypes.array,\n  setOpponentBoard: PropTypes.func,\n  PlayerOne: PropTypes.object,\n  PlayerTwo: PropTypes.object,\n  gameReady: PropTypes.bool,\n  setGameReady: PropTypes.func,\n  winner: PropTypes.object,\n  setWinner: PropTypes.func,\n  setAppStatus: PropTypes.func\n};\nGame.defaultProps = {\n  setBoard: () => {},\n  setOpponentBoard: () => {},\n  gameReady: false,\n  setGameReady: () => {},\n  setWinner: () => {},\n  setAppStatus: () => {}\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FreePlayerGame\");","map":{"version":3,"sources":["/Users/michelle_ma/Desktop/proj2/src/components/FreePlayerGame.jsx"],"names":["React","useEffect","useState","PropTypes","GameBoard","FreePlayerGame","props","player","opponent","isGameReady","setGameReady","opponentBoard","setOpponentBoard","gameBoard","board","EnemyShipCount","setEnemyShipCount","shipCount","handleComputerShipDisplay","onPlaceRandomly","onResetBoard","placeShipsAtRandom","setBoard","onFlipShips","ships","forEach","ship","onBoard","changeShipDirection","document","querySelector","classList","toggle","onPlaceShip","e","y","target","dataset","cord","split","x","shipID","dataTransfer","getData","placeShip","onStartGame","isReady","onMakeMove","makeMove","isGameOver","onEndGame","onAIMove","winner","setTimeout","setWinner","setAppStatus","map","isSunk","mountShip","owner","cords","coordinates","boardDiv","side","startingCell","shipImg","createElement","src","process","env","PUBLIC_URL","size","alt","add","direction","targetAble","appendChild","Game","propTypes","object","array","func","PlayerOne","PlayerTwo","gameReady","bool","defaultProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../style/Game.css';\nimport GameBoard from './GameBoard';\n\nconst FreePlayerGame = (props) => {\n\tconst { player, opponent } = props;\n\tconst [isGameReady, setGameReady] = useState(true);\n\tconst [opponentBoard, setOpponentBoard] = useState([\n\t\t...opponent.gameBoard.board,\n\t]);\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\n\t\topponent.gameBoard.shipCount\n\t);\n    // 用不到\n\t// useEffect(() => {\n\t// \thandlePlayerShipDisplay();\n\t// }, [board]);\n\n\tuseEffect(() => {\n\t\thandleComputerShipDisplay();\n\t}, [EnemyShipCount]);\n\n\tconst onPlaceRandomly = () => {\n\t\tonResetBoard();\n\t\tplayer.gameBoard.placeShipsAtRandom();\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onFlipShips = () => {\n\t\tplayer.gameBoard.ships.forEach((ship) => {\n\t\t\tif (!ship.onBoard) player.gameBoard.changeShipDirection(ship);\n\t\t});\n\t\tsetBoard([...player.gameBoard.board]);\n\t\tdocument.querySelector('.ship-wrapper').classList.toggle('flipped');\n\t};\n\n\tconst onPlaceShip = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tconst shipID = e.dataTransfer.getData('ship');\n\t\tconst ship = player.gameBoard.ships[shipID - 1];\n\t\tplayer.gameBoard.placeShip(ship, x, y);\n\t\t// console.table(board);\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onStartGame = () => {\n\t\tif (player.gameBoard.isReady) setGameReady(true);\n\t};\n\n\tconst onMakeMove = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tif (player.makeMove(opponent, x, y) === true) {\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\n\t\t\t// console.table(opponentBoard);\n\t\t\tif (opponent.gameBoard.isGameOver) {\n\t\t\t\tonEndGame(player);\n\t\t\t}\n\t\t\tonAIMove();\n\t\t}\n\t};\n\n\tconst onEndGame = (winner) => {\n\t\tsetTimeout(() => {\n\t\t\tprops.setWinner(winner);\n\t\t\tprops.setAppStatus('announcer');\n\t\t}, 500);\n\t};\n\n\tconst handleComputerShipDisplay = () => {\n\t\topponent.gameBoard.ships.map((ship) => {\n\t\t\tif (ship.isSunk() === true) {\n\t\t\t\tmountShip(opponent, ship);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst mountShip = (owner, ship) => {\n\t\tif (ship.onBoard) {\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\n\t\t\t\tconst shipImg = document.createElement('img');\n\t\t\t\tshipImg.src =\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.size}.png`;\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.size}`;\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\n\t\t\t\tshipImg.classList.add(ship.direction);\n\t\t\t\tshipImg.targetAble = false;\n\t\t\t\tstartingCell.appendChild(shipImg);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t\tsetGameReady={setGameReady}\n\t\t\t\t\t\tonFlipShips={onFlipShips}\n\t\t\t\t\t\tonPlaceShip={onPlaceShip}\n\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\n\t\t\t\t\t\tonResetBoard={onResetBoard}\n\t\t\t\t\t\tonStartGame={onStartGame}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Game;\n\nGame.propTypes = {\n\tplayer: PropTypes.object,\n\tboard: PropTypes.array,\n\tsetBoard: PropTypes.func,\n\topponent: PropTypes.object,\n\topponentBoard: PropTypes.array,\n\tsetOpponentBoard: PropTypes.func,\n\tPlayerOne: PropTypes.object,\n\tPlayerTwo: PropTypes.object,\n\tgameReady: PropTypes.bool,\n\tsetGameReady: PropTypes.func,\n\twinner: PropTypes.object,\n\tsetWinner: PropTypes.func,\n\tsetAppStatus: PropTypes.func,\n};\n\nGame.defaultProps = {\n\tsetBoard: () => {},\n\tsetOpponentBoard: () => {},\n\tgameReady: false,\n\tsetGameReady: () => {},\n\tsetWinner: () => {},\n\tsetAppStatus: () => {},\n};\n"]},"metadata":{},"sourceType":"module"}