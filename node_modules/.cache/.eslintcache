[{"/Users/zili/web-project2-battleship/src/index.js":"1","/Users/zili/web-project2-battleship/src/App.js":"2","/Users/zili/web-project2-battleship/src/Player.js":"3","/Users/zili/web-project2-battleship/src/components/Game.jsx":"4","/Users/zili/web-project2-battleship/src/components/FreePlayerGame.jsx":"5","/Users/zili/web-project2-battleship/src/components/Announcer.jsx":"6","/Users/zili/web-project2-battleship/src/components/Introduction.jsx":"7","/Users/zili/web-project2-battleship/src/components/NewGame.jsx":"8","/Users/zili/web-project2-battleship/src/Battleships.js":"9","/Users/zili/web-project2-battleship/src/helperFunctions.js":"10","/Users/zili/web-project2-battleship/src/components/GameBoard.jsx":"11"},{"size":390,"mtime":1636517357590,"results":"12","hashOfConfig":"13"},{"size":2066,"mtime":1636656166407,"results":"14","hashOfConfig":"13"},{"size":918,"mtime":1636517408242,"results":"15","hashOfConfig":"13"},{"size":4690,"mtime":1636517357589,"results":"16","hashOfConfig":"13"},{"size":3310,"mtime":1637125001939,"results":"17","hashOfConfig":"13"},{"size":573,"mtime":1637125001939,"results":"18","hashOfConfig":"13"},{"size":2687,"mtime":1637127577679,"results":"19","hashOfConfig":"13"},{"size":778,"mtime":1637125001939,"results":"20","hashOfConfig":"13"},{"size":3986,"mtime":1637125001938,"results":"21","hashOfConfig":"13"},{"size":6836,"mtime":1636517357590,"results":"22","hashOfConfig":"13"},{"size":6547,"mtime":1637125001939,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"wlvkbb",{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/zili/web-project2-battleship/src/index.js",[],["48","49"],"/Users/zili/web-project2-battleship/src/App.js",[],"/Users/zili/web-project2-battleship/src/Player.js",[],"/Users/zili/web-project2-battleship/src/components/Game.jsx",["50","51","52","53"],"import React, { useEffect, useState } from 'react';\n// import { CSSTransition } from 'react-transition-group';\nimport PropTypes from 'prop-types';\nimport '../style/Game.css';\nimport GameBoard from './GameBoard';\n\nconst Game = (props) => {\n\tconst { player, opponent } = props;\n\tconst [isGameReady, setGameReady] = useState(false);\n\tconst [board, setBoard] = useState([...player.gameBoard.board]);\n\tconst [opponentBoard, setOpponentBoard] = useState([\n\t\t...opponent.gameBoard.board,\n\t]);\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\n\t\topponent.gameBoard.shipCount\n\t);\n\n\tuseEffect(() => {\n\t\thandlePlayerShipDisplay();\n\t}, [board]);\n\n\tuseEffect(() => {\n\t\thandleComputerShipDisplay();\n\t}, [EnemyShipCount]);\n\n\tconst onPlaceRandomly = () => {\n\t\tonResetBoard();\n\t\tplayer.gameBoard.placeShipsAtRandom();\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onFlipShips = () => {\n\t\tplayer.gameBoard.ships.forEach((ship) => {\n\t\t\tif (!ship.onBoard) player.gameBoard.changeShipDirection(ship);\n\t\t});\n\t\tsetBoard([...player.gameBoard.board]);\n\t\tdocument.querySelector('.ship-wrapper').classList.toggle('flipped');\n\t};\n\n\tconst onResetBoard = () => {\n\t\tplayer.gameBoard.makeBoard();\n\t\tplayer.gameBoard.getShips();\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onPlaceShip = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tconst shipID = e.dataTransfer.getData('ship');\n\t\tconst ship = player.gameBoard.ships[shipID - 1];\n\t\tplayer.gameBoard.placeShip(ship, x, y);\n\t\t// console.table(board);\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onStartGame = () => {\n\t\tif (player.gameBoard.isReady) setGameReady(true);\n\t};\n\n\tconst onMakeMove = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tif (player.makeMove(opponent, x, y) === true) {\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\n\t\t\t// console.table(opponentBoard);\n\t\t\tif (opponent.gameBoard.isGameOver) {\n\t\t\t\tonEndGame(player);\n\t\t\t}\n\t\t\tonAIMove();\n\t\t}\n\t};\n\n\tconst onAIMove = () => {\n\t\topponent.makeAIMove(player, false);\n\t\tsetBoard([...player.gameBoard.board]);\n\t\t// console.table(board);\n\t\tif (player.gameBoard.isGameOver) {\n\t\t\tonEndGame(opponent);\n\t\t}\n\t};\n\n\tconst onEndGame = (winner) => {\n\t\tsetTimeout(() => {\n\t\t\tprops.setWinner(winner);\n\t\t\tprops.setAppStatus('announcer');\n\t\t}, 500);\n\t};\n\n\tconst handlePlayerShipDisplay = () => {\n\t\tplayer.gameBoard.ships.map((ship) => {\n\t\t\tmountShip(player, ship);\n\t\t});\n\t};\n\n\tconst handleComputerShipDisplay = () => {\n\t\topponent.gameBoard.ships.map((ship) => {\n\t\t\tif (ship.isSunk() === true) {\n\t\t\t\tmountShip(opponent, ship);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst mountShip = (owner, ship) => {\n\t\tif (ship.onBoard) {\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\n\t\t\t\tconst shipImg = document.createElement('img');\n\t\t\t\tshipImg.src =\n\t\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.size}.png`;\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.size}`;\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\n\t\t\t\tshipImg.classList.add(ship.direction);\n\t\t\t\tshipImg.targetAble = false;\n\t\t\t\tstartingCell.appendChild(shipImg);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{isGameReady ? (\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard player={player} board={board} isGameReady={isGameReady} />\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={opponent}\n\t\t\t\t\t\tboard={opponentBoard}\n\t\t\t\t\t\tonMakeMove={onMakeMove}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t\tsetGameReady={setGameReady}\n\t\t\t\t\t\tonFlipShips={onFlipShips}\n\t\t\t\t\t\tonPlaceShip={onPlaceShip}\n\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\n\t\t\t\t\t\tonResetBoard={onResetBoard}\n\t\t\t\t\t\tonStartGame={onStartGame}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Game;\n\nGame.propTypes = {\n\tplayer: PropTypes.object,\n\tboard: PropTypes.array,\n\tsetBoard: PropTypes.func,\n\topponent: PropTypes.object,\n\topponentBoard: PropTypes.array,\n\tsetOpponentBoard: PropTypes.func,\n\tPlayerOne: PropTypes.object,\n\tPlayerTwo: PropTypes.object,\n\tgameReady: PropTypes.bool,\n\tsetGameReady: PropTypes.func,\n\twinner: PropTypes.object,\n\tsetWinner: PropTypes.func,\n\tsetAppStatus: PropTypes.func,\n};\n\nGame.defaultProps = {\n\tsetBoard: () => {},\n\tsetOpponentBoard: () => {},\n\tgameReady: false,\n\tsetGameReady: () => {},\n\tsetWinner: () => {},\n\tsetAppStatus: () => {},\n};\n","/Users/zili/web-project2-battleship/src/components/FreePlayerGame.jsx",["54","55","56","57","58"],"/Users/zili/web-project2-battleship/src/components/Announcer.jsx",[],"/Users/zili/web-project2-battleship/src/components/Introduction.jsx",[],"/Users/zili/web-project2-battleship/src/components/NewGame.jsx",[],"/Users/zili/web-project2-battleship/src/Battleships.js",[],"/Users/zili/web-project2-battleship/src/helperFunctions.js",[],"/Users/zili/web-project2-battleship/src/components/GameBoard.jsx",["59"],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":20,"column":5,"nodeType":"66","endLine":20,"endColumn":12,"suggestions":"67"},{"ruleId":"64","severity":1,"message":"68","line":24,"column":5,"nodeType":"66","endLine":24,"endColumn":21,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":91,"column":37,"nodeType":"72","messageId":"73","endLine":91,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":97,"column":39,"nodeType":"72","messageId":"73","endLine":97,"endColumn":41},{"ruleId":"74","severity":1,"message":"75","line":9,"column":22,"nodeType":"76","messageId":"77","endLine":9,"endColumn":34},{"ruleId":"64","severity":1,"message":"65","line":20,"column":5,"nodeType":"66","endLine":20,"endColumn":12,"suggestions":"78"},{"ruleId":"64","severity":1,"message":"68","line":24,"column":5,"nodeType":"66","endLine":24,"endColumn":21,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"71","line":57,"column":37,"nodeType":"72","messageId":"73","endLine":57,"endColumn":39},{"ruleId":"70","severity":1,"message":"71","line":63,"column":39,"nodeType":"72","messageId":"73","endLine":63,"endColumn":41},{"ruleId":"74","severity":1,"message":"80","line":6,"column":18,"nodeType":"76","messageId":"77","endLine":6,"endColumn":23},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePlayerShipDisplay'. Either include it or remove the dependency array.","ArrayExpression",["83"],"React Hook useEffect has a missing dependency: 'handleComputerShipDisplay'. Either include it or remove the dependency array.",["84"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-unused-vars","'setGameReady' is assigned a value but never used.","Identifier","unusedVar",["85"],["86"],"'board' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},{"desc":"87","fix":"91"},{"desc":"89","fix":"92"},"Update the dependencies array to be: [board, handlePlayerShipDisplay]",{"range":"93","text":"94"},"Update the dependencies array to be: [EnemyShipCount, handleComputerShipDisplay]",{"range":"95","text":"96"},{"range":"97","text":"94"},{"range":"98","text":"96"},[629,636],"[board, handlePlayerShipDisplay]",[694,710],"[EnemyShipCount, handleComputerShipDisplay]",[638,645],[703,719]]