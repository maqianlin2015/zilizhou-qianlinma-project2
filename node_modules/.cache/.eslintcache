[{"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/index.js":"1","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/App.js":"2","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/Player.js":"3","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/NewGame.jsx":"4","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Game.jsx":"5","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Announcer.jsx":"6","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/FreePlayerGame.jsx":"7","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Introduction.jsx":"8","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/helperFunctions.js":"9","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/Battleships.js":"10","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/GameBoard.jsx":"11","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/store.js":"12","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/actionConstants.js":"13","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/stateConstants.js":"14","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/actions.js":"15","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/AppWrapper.js":"16","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/HelperFunctions.js":"17"},{"size":403,"mtime":1637556588320,"results":"18","hashOfConfig":"19"},{"size":1125,"mtime":1637586056344,"results":"20","hashOfConfig":"19"},{"size":909,"mtime":1637586507247,"results":"21","hashOfConfig":"19"},{"size":880,"mtime":1637581455914,"results":"22","hashOfConfig":"19"},{"size":3925,"mtime":1637585622214,"results":"23","hashOfConfig":"19"},{"size":590,"mtime":1637585602117,"results":"24","hashOfConfig":"19"},{"size":2848,"mtime":1637581347467,"results":"25","hashOfConfig":"19"},{"size":2729,"mtime":1637585663838,"results":"26","hashOfConfig":"19"},{"size":6769,"mtime":1637585026693,"results":"27","hashOfConfig":"19"},{"size":3595,"mtime":1637586520520,"results":"28","hashOfConfig":"19"},{"size":5308,"mtime":1637586800150,"results":"29","hashOfConfig":"19"},{"size":633,"mtime":1637553746338,"results":"30","hashOfConfig":"19"},{"size":100,"mtime":1637553686128,"results":"31","hashOfConfig":"19"},{"size":81,"mtime":1637553760856,"results":"32","hashOfConfig":"19"},{"size":1164,"mtime":1637556748957,"results":"33","hashOfConfig":"19"},{"size":323,"mtime":1637581531197,"results":"34","hashOfConfig":"19"},{"size":6769,"mtime":1637586441075,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1347a75",{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"39"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"39"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"39"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"39"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"39"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/index.js",["80"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './App';\nimport AppWrapper from './AppWrapper';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nlibrary.add(fab);\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<AppWrapper/>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n",["81","82"],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/App.js",["83","84","85","86","87","88","89"],"import React, { useState } from 'react';\nimport { CreatePlayer } from './Player';\nimport Introduction from './components/Introduction';\nimport NewGame from './components/NewGame';\nimport Game from './components/Game';\nimport FreePlayerGame from './components/FreePlayerGame';\nimport Announcer from './components/Announcer';\nimport './style/App.css';\nimport { useSelector, useDispatch } from \"react-redux\";\n\n\nconst App = () => {\n\tlet PlayerOne = CreatePlayer('human-player', 'human');\n\tlet PlayerTwo = CreatePlayer('ai-player', 'computer');\n\tconst newAppStatus = useSelector(state => state.newAppStatus);\n\tconst dispatch = useDispatch();\n\n\tif (newAppStatus == \"intro\") {\n\t\treturn (\n\t\t\t<Introduction />\n\t\t)\n\t} else if (newAppStatus == \"newGame\") {\n\t\treturn (\n\t\t\t<NewGame />\n\t\t)\n\t} else if (newAppStatus == \"game\") {\n\t\treturn (\n\t\t\t<Game\n\t\t\t\tplayer={PlayerOne}\n\t\t\t\topponent={PlayerTwo}\n\t\t\t/>\n\t\t);\n\t} else if (newAppStatus == \"freeplayergame\") {\n\t\treturn (\n\t\t\t<FreePlayerGame\n\t\t\t\t\tplayer={PlayerOne}\n\t\t\t\t\topponent={PlayerTwo}\n\t\t\t\t/>\n\t\t);\n\t} else if (newAppStatus == \"announcer\") {\n\t\treturn <Announcer/>\n\t}\n};\n\nexport default App;\n","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/Player.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/NewGame.jsx",["90"],"import React from 'react';\nimport '../style/Intro.css';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeAppStatus, changeWinner} from \"../redux/actions\";\n\nconst NewGame = () => {\n\tconst newAppStatus = useSelector(state => state.newAppStatus);\n\tconst dispatch = useDispatch();\n  \n\tconst onStartNormalGame = () => {\n\t\tdispatch(changeAppStatus(\"game\"));\n\t\tdispatch(changeWinner(null));\n\t};\n\n\tconst onStartFreePlayerGame = () => {\n\t\tdispatch(changeAppStatus(\"freeplayergame\"));\n\t\tdispatch(changeWinner(null));\n\t};\n  \n\treturn (\n\t\t<div className=\"neon-btn\">\n\t\t\t<div className=\"\">\n\t\t\t\t<button className=\"btn one\" onClick={onStartNormalGame}>\n\t\t\t\t\tGame\n\t\t\t\t</button>\n\t\t\t\t<div id=\"divider\" />\n\t\t\t\t<br/>\n\t\t\t\t<br/>\n\t\t\t\t<button className=\"btn one\" onClick={onStartFreePlayerGame}>\n\t\t\t\t\tTry Free Player Game\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default NewGame;\n","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Game.jsx",["91","92","93","94","95","96"],"import React, { useEffect, useState } from 'react';\nimport '../style/Game.css';\nimport GameBoard from './GameBoard';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeAppStatus, changeWinner} from \"../redux/actions\";\n\nconst Game = (props) => {\n\tconst newAppStatus = useSelector(state => state.newAppStatus);\n\tconst newWinner = useSelector(state => state.newWinner);\n\tconst dispatch = useDispatch();\n\n\tconst { player, opponent } = props;\n\tconst [isGameReady, setGameReady] = useState(false);\n\tconst [board, setBoard] = useState([...player.gameBoard.board]);\n\tconst [opponentBoard, setOpponentBoard] = useState([\n\t\t...opponent.gameBoard.board,\n\t]);\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\n\t\topponent.gameBoard.shipCount\n\t);\n\n\tuseEffect(() => {\n\t\thandlePlayerShipDisplay();\n\t}, [board]);\n\n\tuseEffect(() => {\n\t\thandleComputerShipDisplay();\n\t}, [EnemyShipCount]);\n\n\tconst onPlaceRandomly = () => {\n\t\tonResetBoard();\n\t\tplayer.gameBoard.placeShipsAtRandom();\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onResetBoard = () => {\n\t\tplayer.gameBoard.makeBoard();\n\t\tplayer.gameBoard.getShips();\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onPlaceShip = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tconst shipID = e.dataTransfer.getData('ship');\n\t\tconst ship = player.gameBoard.ships[shipID - 1];\n\t\tplayer.gameBoard.placeShip(ship, x, y);\n\t\tsetBoard([...player.gameBoard.board]);\n\t};\n\n\tconst onStartGame = () => {\n\t\tif (player.gameBoard.isReady) setGameReady(true);\n\t};\n\n\tconst onMakeMove = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tif (player.makeMove(opponent, x, y) === true) {\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\n\t\t\tif (opponent.gameBoard.isGameOver) {\n\t\t\t\tonEndGame(player);\n\t\t\t}\n\t\t\tonAIMove();\n\t\t}\n\t};\n\n\tconst onAIMove = () => {\n\t\topponent.makeAIMove(player, false);\n\t\tsetBoard([...player.gameBoard.board]);\n\t\tif (player.gameBoard.isGameOver) {\n\t\t\tonEndGame(opponent);\n\t\t}\n\t};\n\n\tconst onEndGame = (newWinner) => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(changeWinner(newWinner));\n\t\t\tdispatch(changeAppStatus('announcer'));\n\t\t}, 500);\n\t};\n\n\tconst handlePlayerShipDisplay = () => {\n\t\tplayer.gameBoard.ships.map((ship) => {\n\t\t\tmountShip(player, ship);\n\t\t});\n\t};\n\n\tconst handleComputerShipDisplay = () => {\n\t\topponent.gameBoard.ships.map((ship) => {\n\t\t\tif (ship.isSunk() === true) {\n\t\t\t\tmountShip(opponent, ship);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst mountShip = (owner, ship) => {\n\t\tif (ship.onBoard) {\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\n\t\t\t\tconst shipImg = document.createElement('img');\n\t\t\t\tshipImg.src =\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.size}.png`;\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.size}`;\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\n\t\t\t\tshipImg.classList.add(ship.direction);\n\t\t\t\tshipImg.targetAble = false;\n\t\t\t\tstartingCell.appendChild(shipImg);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t{isGameReady ? (\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard player={player} board={board} isGameReady={isGameReady} />\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={opponent}\n\t\t\t\t\t\tboard={opponentBoard}\n\t\t\t\t\t\tonMakeMove={onMakeMove}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={player}\n\t\t\t\t\t\tboard={board}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t\tsetGameReady={setGameReady}\n\t\t\t\t\t\t// onFlipShips={onFlipShips}\n\t\t\t\t\t\tonPlaceShip={onPlaceShip}\n\t\t\t\t\t\tonPlaceRandomly={onPlaceRandomly}\n\t\t\t\t\t\tonResetBoard={onResetBoard}\n\t\t\t\t\t\tonStartGame={onStartGame}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Game;","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Announcer.jsx",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/FreePlayerGame.jsx",["97","98","99","100","101","102","103"],"import React, { useEffect, useState } from 'react';\nimport '../style/Game.css';\nimport GameBoard from './GameBoard';\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeAppStatus, changeWinner} from \"../redux/actions\";\n\nconst FreePlayerGame = (props) => {\n\tconst newAppStatus = useSelector(state => state.newAppStatus);\n\tconst newWinner = useSelector(state => state.newWinner);\n\tconst dispatch = useDispatch();\n\n\tconst { player, opponent } = props;\n\tconst [isGameReady, setGameReady] = useState(true);\n\tconst [board, setBoard] = useState([...player.gameBoard.board]);\n\tconst [opponentBoard, setOpponentBoard] = useState([\n\t\t...opponent.gameBoard.board,\n\t]);\n\tconst [EnemyShipCount, setEnemyShipCount] = useState(\n\t\topponent.gameBoard.shipCount\n\t);\n\n\tuseEffect(() => {\n\t\thandlePlayerShipDisplay();\n\t}, [board]);\n\n\tuseEffect(() => {\n\t\thandleComputerShipDisplay();\n\t}, [EnemyShipCount]);\n\n\tconst onMakeMove = (e) => {\n\t\tconst y = e.target.dataset.cord.split(',')[0];\n\t\tconst x = e.target.dataset.cord.split(',')[1];\n\t\tif (player.makeMove(opponent, x, y) === true) {\n\t\t\tsetOpponentBoard([...opponent.gameBoard.board]);\n\t\t\tsetEnemyShipCount(opponent.gameBoard.shipCount);\n\t\t\t// console.table(opponentBoard);\n\t\t\tif (opponent.gameBoard.isGameOver) {\n\t\t\t\tonEndGame(player);\n\t\t\t}\n\t\t\tonAIMove();\n\t\t}\n\t};\n\n\tconst onAIMove = () => {\n\t\topponent.makeAIMove(player, false);\n\t\tsetBoard([...player.gameBoard.board]);\n\t\tif (player.gameBoard.isGameOver) {\n\t\t\tonEndGame(opponent);\n\t\t}\n\t};\n\n\tconst onEndGame = (newWinner) => {\n\t\tsetTimeout(() => {\n\t\t\tdispatch(changeWinner(newWinner));\n\t\t\tdispatch(changeAppStatus('announcer'));\n\t\t}, 500);\n\t};\n\n\tconst handlePlayerShipDisplay = () => {\n\t\tplayer.gameBoard.ships.map((ship) => {\n\t\t\tmountShip(player, ship);\n\t\t});\n\t};\n\n\tconst handleComputerShipDisplay = () => {\n\t\topponent.gameBoard.ships.map((ship) => {\n\t\t\tif (ship.isSunk() === true) {\n\t\t\t\tmountShip(opponent, ship);\n\t\t\t}\n\t\t});\n\t};\n\n\tconst mountShip = (owner, ship) => {\n\t\tif (ship.onBoard) {\n\t\t\tconst cords = [ship.coordinates[1], ship.coordinates[0]];\n\t\t\tconst boardDiv = document.querySelector(`.${owner.side}`);\n\t\t\tconst startingCell = boardDiv.querySelector(`div[data-cord=\"${cords}\"]`);\n\t\t\tif (!startingCell.querySelector('.ship-img-grid')) {\n\t\t\t\tconst shipImg = document.createElement('img');\n\t\t\t\tshipImg.src =\n\t\t\t\t\tprocess.env.PUBLIC_URL + `/images/${owner.side}${ship.size}.png`;\n\t\t\t\tshipImg.alt = `ship-${owner.side}${ship.size}`;\n\t\t\t\tshipImg.classList.add(`ship-img-grid`);\n\t\t\t\tshipImg.classList.add(ship.direction);\n\t\t\t\tshipImg.targetAble = false;\n\t\t\t\tstartingCell.appendChild(shipImg);\n\t\t\t}\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t\t<div className=\"game\">\n\t\t\t\t\t<GameBoard\n\t\t\t\t\t\tplayer={opponent}\n\t\t\t\t\t\tboard={opponentBoard}\n\t\t\t\t\t\tonMakeMove={onMakeMove}\n\t\t\t\t\t\tisGameReady={isGameReady}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default FreePlayerGame;","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/Introduction.jsx",["104"],"import React from \"react\";\nimport \"../style/Intro.css\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {changeAppStatus} from \"../redux/actions\";\n\nconst Introduction = () => {\n  const newAppStatus = useSelector(state => state.newAppStatus);\n  const dispatch = useDispatch();\n\n  return (\n    <div className=\"fade\">\n      <section className=\"star-wars-intro\">\n        <div className=\"crawl\">\n          <div className=\"title\">\n            <h1>Battleships</h1>\n            <h2>Rules</h2>\n          </div>\n          <h3>Game Objective</h3>\n          <p>\n            The object of Battleship is to try and sink all of the other\n            player's before they sink all of your ships. All of the other\n            player's ships are somewhere on his/her board.  You try and hit them\n            by calling out the coordinates of one of the squares on the board. \n            The other player also tries to hit your ships by calling out\n            coordinates.  Neither you nor the other player can see the other's\n            board so you must try to guess where they are.  Each board in the\n            physical game has two grids:  the lower (horizontal) section for the\n            player's ships and the upper part (vertical during play) for\n            recording the player's guesses.\n          </p>\n\n          <h3>Starting a New Game</h3>\n          <p>\n            Each player places the 5 ships somewhere on their board. The ships\n            can only be placed vertically or horizontally. Diagonal placement is\n            not allowed. No part of a ship may hang off the edge of the board.\n            Ships may not overlap each other. No ships may be placed on another\n            ship. Once the guessing begins, the players may not move the ships.\n          </p>\n\n          <h3>Playing the Game</h3>\n          <p>\n            Player's take turns guessing by calling out the coordinates. The\n            opponent responds with \"hit\" or \"miss\" as appropriate. Both players\n            should mark their board with pegs: red for hit, white for miss. When\n            all of the squares that one your ships occupies have been hit, the\n            ship will be sunk. You should announce \"hit and sunk\". In the\n            physical game, a red peg is placed on the top edge of the vertical\n            board to indicate a sunk ship. As soon as all of one player's ships\n            have been sunk, the game ends.\n          </p>\n          <br></br>\n          <br></br>\n          <button className=\"click-start-game-btn\" onClick={() => dispatch(changeAppStatus(\"newGame\"))}>\n            Click Here to Start Game\n          </button>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Introduction;\n","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/helperFunctions.js",[],["105","106"],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/Battleships.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/components/GameBoard.jsx",["107"],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/store.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/actionConstants.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/stateConstants.js",[],"/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/redux/actions.js",["108"],"import { createStore } from \"redux\";\nimport { CHANGE_APP_STATUS, CHANGE_WINNER } from \"./actionConstants\";\n\n// Action creator functions\nexport const changeAppStatus = newAppStatus => ({\n    type: CHANGE_APP_STATUS,\n    payload: {\n        newAppStatus: newAppStatus\n    }\n});\n\nexport const changeWinner = newWinner => ({\n    type: CHANGE_WINNER,\n    payload: {\n        newWinner: newWinner\n    }\n})\n\n\n\n// // Reductor check which action you give ,and based on action, modify the store\n// //dispatch: execute action\n\n\n// // action\n// const increament = () => {\n//     return{\n//         type: 'INCREMENT'\n//     }\n// }\n// const decreament = () => {\n//     return{\n//         type: 'DECREMENT'\n//     }\n// }\n// // reducer，不同的reducer做不同的事\n// const conter = (state = 0, action) => {\n//     switch(action.type) {\n//         case \"INCREMENT\": // based on name, return sth\n        \n//             return state+1;\n//             case \"DECREMENT\":\n//                 return state-1;\n//     }\n// }\n\n// // 1. create store:\n// import (createStore)\n// let store = createStore(counter);\n\n// // dispatch \n// store.dispatch(increment()); 里面放了一个action\n\n","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/AppWrapper.js",["109"],"import React, { useState } from 'react';\nimport './style/App.css';\nimport { Provider } from \"react-redux\";\nimport store from \"../src/redux/store\";\nimport App from './App';\n\nconst AppWrapper = () => {\n  \n    return (\n      <Provider store={store}> \n        <App /> \n      </Provider>\n    )\n  }\n\n  export default AppWrapper; ","/Users/michelle_ma/Desktop/NEU/Web/Project/web-project2-battleship/src/HelperFunctions.js",[],{"ruleId":"110","severity":1,"message":"111","line":4,"column":8,"nodeType":"112","messageId":"113","endLine":4,"endColumn":11},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"110","severity":1,"message":"118","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},{"ruleId":"110","severity":1,"message":"119","line":16,"column":8,"nodeType":"112","messageId":"113","endLine":16,"endColumn":16},{"ruleId":"120","severity":1,"message":"121","line":18,"column":19,"nodeType":"122","messageId":"123","endLine":18,"endColumn":21},{"ruleId":"120","severity":1,"message":"121","line":22,"column":26,"nodeType":"122","messageId":"123","endLine":22,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":26,"column":26,"nodeType":"122","messageId":"123","endLine":26,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":33,"column":26,"nodeType":"122","messageId":"123","endLine":33,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":40,"column":26,"nodeType":"122","messageId":"123","endLine":40,"endColumn":28},{"ruleId":"110","severity":1,"message":"124","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":20},{"ruleId":"110","severity":1,"message":"124","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":20},{"ruleId":"110","severity":1,"message":"125","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":17},{"ruleId":"126","severity":1,"message":"127","line":24,"column":5,"nodeType":"128","endLine":24,"endColumn":12,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":28,"column":5,"nodeType":"128","endLine":28,"endColumn":21,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":84,"column":37,"nodeType":"134","messageId":"135","endLine":84,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":90,"column":39,"nodeType":"134","messageId":"135","endLine":90,"endColumn":41},{"ruleId":"110","severity":1,"message":"124","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":20},{"ruleId":"110","severity":1,"message":"125","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":17},{"ruleId":"110","severity":1,"message":"136","line":13,"column":22,"nodeType":"112","messageId":"113","endLine":13,"endColumn":34},{"ruleId":"126","severity":1,"message":"127","line":24,"column":5,"nodeType":"128","endLine":24,"endColumn":12,"suggestions":"137"},{"ruleId":"126","severity":1,"message":"130","line":28,"column":5,"nodeType":"128","endLine":28,"endColumn":21,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"133","line":60,"column":37,"nodeType":"134","messageId":"135","endLine":60,"endColumn":39},{"ruleId":"132","severity":1,"message":"133","line":66,"column":39,"nodeType":"134","messageId":"135","endLine":66,"endColumn":41},{"ruleId":"110","severity":1,"message":"124","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"114","replacedBy":"139"},{"ruleId":"116","replacedBy":"140"},{"ruleId":"110","severity":1,"message":"141","line":4,"column":18,"nodeType":"112","messageId":"113","endLine":4,"endColumn":23},{"ruleId":"110","severity":1,"message":"142","line":1,"column":10,"nodeType":"112","messageId":"113","endLine":1,"endColumn":21},{"ruleId":"110","severity":1,"message":"118","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":25},"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],"'useState' is defined but never used.","'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'newAppStatus' is assigned a value but never used.","'newWinner' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handlePlayerShipDisplay'. Either include it or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has a missing dependency: 'handleComputerShipDisplay'. Either include it or remove the dependency array.",["146"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setGameReady' is assigned a value but never used.",["147"],["148"],["143"],["144"],"'board' is assigned a value but never used.","'createStore' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"149","fix":"153"},{"desc":"151","fix":"154"},"Update the dependencies array to be: [board, handlePlayerShipDisplay]",{"range":"155","text":"156"},"Update the dependencies array to be: [EnemyShipCount, handleComputerShipDisplay]",{"range":"157","text":"158"},{"range":"159","text":"156"},{"range":"160","text":"158"},[808,815],"[board, handlePlayerShipDisplay]",[873,889],"[EnemyShipCount, handleComputerShipDisplay]",[817,824],[882,898]]